pipeline {
    agent { label 'node-1' }  // Set the agent to use node-1

    environment {
        DOCKER_IMAGE = 'my-app'               // Docker image name
        DOCKER_TAG = 'latest-v2'                 // Docker tag
        DOCKER_HUB_REPO = 'royjith/pikube'    // Docker Hub repository
        DOCKER_HUB_CREDENTIALS_ID = 'dockerhub'  // Docker Hub credentials ID
        KUBE_CONFIG = '/tmp/kubeconfig'  // Path to the kubeconfig file or use Jenkins Kubernetes plugin credentials
        DEPLOYMENT_NAME = 'pipeline-deployment'
        NAMESPACE = 'default'  // Kubernetes namespace to deploy to
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code from Git...'
                git branch: 'main', credentialsId: 'dockerhub', url: 'https://github.com/Royjith/docker.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Set default tag to 'latest' if DOCKER_TAG is not defined
                    def tag = "${DOCKER_TAG ?: 'latest-v2'}"
                    echo "Building Docker image with tag: ${tag}..."
                    // Build the Docker image with the determined tag
                    def buildResult = sh(script: "docker build -t ${DOCKER_HUB_REPO}:${tag} .", returnStatus: true)
            
                    if (buildResult != 0) {
                        error 'Docker build failed!'  // Explicitly fail if Docker build fails
                    }
                }
            }
        }

        stage('Trivy Scan') {
            steps {
                script {
                    echo 'Running Trivy security scan on the Docker image...'

                    // Run Trivy scan for vulnerabilities in the Docker image
                    def scanResult = sh(script: "trivy image ${DOCKER_HUB_REPO}:${DOCKER_TAG}", returnStatus: true)

                    // Fail the build if vulnerabilities are found (returnStatus != 0 means issues were detected)
                    if (scanResult != 0) {
                        error 'Trivy scan found vulnerabilities in the Docker image!'
                    } else {
                        echo 'Trivy scan passed: No vulnerabilities found.'
                    }
                }
            }
        }

        stage('Push
