#!/bin/bash

# Set environment variables
DOCKER_IMAGE="my-app"                   # Docker image name
DOCKER_TAG="jith"                       # Docker tag
DOCKER_HUB_REPO="royjith/pikube"        # Docker Hub repository
DOCKER_HUB_CREDENTIALS_ID="dockerhub"   # Docker Hub credentials ID

# Manually retrieve Docker Hub credentials (replace with actual way of fetching credentials in your setup)
DOCKER_USERNAME="royjith"    # Replace with actual username or fetch from env
DOCKER_PASSWORD="dockerhub"    # Replace with actual password or fetch from env

# Checkout code from Git
echo "Checking out code from Git..."
git clone -b main https://github.com/Royjith/docker.git
cd docker

# Build Docker Image
echo "Building Docker image..."
docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .

# Check if the build was successful
if [ $? -ne 0 ]; then
    echo "Docker build failed!"
    exit 1
fi

# Uncomment if you want to run the Trivy scan
# Trivy Scan
# echo "Clearing Trivy vulnerability database cache..."
# rm -rf ~/.cache/trivy/db
# echo "Running Trivy vulnerability scan on the Docker image..."
# trivy --severity HIGH,CRITICAL --no-progress image --format table -o trivy-scan-report.txt ${DOCKER_HUB_REPO}:latest
# if [ $? -ne 0 ]; then
#     echo "Trivy scan failed!"
#     exit 1
# fi

# Push Image to Docker Hub
echo "Pushing Docker image to DockerHub..."

# Docker Login
echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

# Check if the login was successful
if [ $? -ne 0 ]; then
    echo "Docker login failed!"
    exit 1
fi

# Push the Docker image
docker push ${DOCKER_HUB_REPO}:${DOCKER_TAG}

# Check if the push was successful
if [ $? -ne 0 ]; then
    echo "Docker push failed!"
    exit 1
fi

# Clean workspace
echo "Cleaning up workspace..."
rm -rf ./*

# Success message
echo "Pipeline executed successfully!"
